# Only1MCP Configuration - Enterprise Template
# Production-ready configuration for large organizations
# Highly available, secure, and scalable setup

version: "1.0"

# Core proxy configuration
proxy:
  # Network binding - all interfaces for load balancer
  host: 0.0.0.0
  port: 8080

  # TLS configuration (required for production)
  tls:
    enabled: true
    cert_file: /etc/only1mcp/certs/server.crt
    key_file: /etc/only1mcp/certs/server.key
    ca_file: /etc/only1mcp/certs/ca-bundle.crt

    # TLS settings
    min_version: "TLS1.3"
    cipher_suites:
      - "TLS_AES_256_GCM_SHA384"
      - "TLS_AES_128_GCM_SHA256"
      - "TLS_CHACHA20_POLY1305_SHA256"

    # mTLS for service-to-service
    client_auth:
      enabled: true
      required: false  # Make required for zero-trust
      ca_file: /etc/only1mcp/certs/client-ca.crt

  # Performance - production scale
  worker_threads: 0  # Auto-detect CPU cores
  max_connections: 100000
  backlog: 1024

  # Timeouts
  request_timeout: 60s
  idle_timeout: 300s
  shutdown_timeout: 60s
  keepalive: 75s

  # HTTP/2 settings
  http2:
    enabled: true
    initial_window_size: 1048576  # 1MB
    max_frame_size: 16384
    max_concurrent_streams: 1000

# MCP Backend Servers - Multi-region deployment
servers:
  # Region 1: US-East
  - id: us-east-1
    name: "US East Primary"
    enabled: true
    transport: http
    endpoint: https://mcp-us-east-1.internal:9443
    region: us-east-1
    tier: primary

    # Connection pooling
    pool:
      min_connections: 10
      max_connections: 500
      idle_timeout: 300s
      connection_timeout: 10s
      max_lifetime: 1h

    # Advanced health checking
    health_check:
      enabled: true
      interval: 10s
      timeout: 5s
      retries: 3
      failure_threshold: 3
      success_threshold: 2
      path: /health/ready
      expected_status: 200

      # Deep health checks
      checks:
        - type: tcp
        - type: http
          method: GET
          path: /health/ready
        - type: grpc
          service: mcp.v1.Health
          method: Check

    # Load shedding
    limits:
      max_requests: 10000
      max_concurrent: 1000
      queue_size: 5000

  - id: us-east-2
    name: "US East Secondary"
    enabled: true
    transport: http
    endpoint: https://mcp-us-east-2.internal:9443
    region: us-east-1
    tier: secondary

    pool:
      min_connections: 5
      max_connections: 250
      idle_timeout: 300s

    health_check:
      enabled: true
      interval: 10s
      timeout: 5s
      retries: 3

  # Region 2: EU-West
  - id: eu-west-1
    name: "EU West Primary"
    enabled: true
    transport: http
    endpoint: https://mcp-eu-west-1.internal:9443
    region: eu-west-1
    tier: primary

    pool:
      min_connections: 10
      max_connections: 500
      idle_timeout: 300s

    health_check:
      enabled: true
      interval: 10s
      timeout: 5s
      retries: 3

  # Region 3: AP-Southeast
  - id: ap-southeast-1
    name: "Asia Pacific Primary"
    enabled: true
    transport: http
    endpoint: https://mcp-ap-southeast-1.internal:9443
    region: ap-southeast-1
    tier: primary

    pool:
      min_connections: 10
      max_connections: 500
      idle_timeout: 300s

    health_check:
      enabled: true
      interval: 10s
      timeout: 5s
      retries: 3

  # Specialized servers
  - id: gpu-cluster
    name: "GPU Processing Cluster"
    enabled: true
    transport: grpc
    endpoint: grpc://gpu-cluster.internal:50051
    capabilities:
      - "image_processing"
      - "ml_inference"
      - "video_analysis"

    pool:
      min_connections: 2
      max_connections: 50
      idle_timeout: 60s

    # Resource-aware routing
    routing_hints:
      prefer_for:
        - "image/*"
        - "video/*"
        - "model/*"
      cost_weight: 10  # More expensive

  # Context7 - Up-to-date library documentation (SSE - WORKING)
  # - id: "context7"
  #   name: "Context7 MCP Server"
  #   enabled: true
  #   transport:
  #     type: "sse"
  #     url: "https://mcp.context7.com/mcp"
  #     headers:
  #       Accept: "application/json, text/event-stream"
  #       Content-Type: "application/json"
  #   health_check:
  #     enabled: false
  #   weight: 100

  # Sequential Thinking - Multi-step reasoning (STDIO - Phase 3)
  # - id: "sequential-thinking"
  #   name: "Sequential Thinking MCP Server"
  #   enabled: true
  #   transport:
  #     type: "stdio"
  #     command: "npx"
  #     args: ["-y", "@modelcontextprotocol/server-sequential-thinking"]
  #     env: {}
  #   health_check:
  #     enabled: false
  #   weight: 100

  # Memory - Knowledge graph (STDIO - Phase 3)
  # - id: "memory"
  #   name: "Memory MCP Server"
  #   enabled: true
  #   transport:
  #     type: "stdio"
  #     command: "npx"
  #     args: ["-y", "@modelcontextprotocol/server-memory"]
  #     env: {}
  #   health_check:
  #     enabled: false
  #   weight: 100

# Proxy Configuration
proxy:
  mode: high_availability
  routing:
    strategy: consistent_hash
    health_aware: true
    failover:
      enabled: true
      threshold: 3
      recovery_time: 60s
  connection_pool:
    enabled: true
    max_connections: 1000
    idle_timeout: 300s
    connection_timeout: 10s
    keepalive: 60s
  rate_limiting:
    enabled: true
    global_limit: 10000
    per_client_limit: 1000
    window: 1m
  circuit_breaker:
    enabled: true
    failure_threshold: 5
    success_threshold: 3
    timeout: 30s
    half_open_requests: 10

# Context Optimization
context_optimization:
  # Request batching - aggregate similar requests
  batching:
    enabled: true  # Highly recommended for enterprise (hundreds of concurrent users)

    # Time window to collect requests (milliseconds)
    window_ms: 50  # Lower latency for enterprise SLAs

    # Maximum requests per batch
    max_batch_size: 50  # Much higher for enterprise scale

    # Methods that support batching (list methods benefit most)
    methods:
      - tools/list
      - resources/list
      - prompts/list

    # Enterprise note: Batching can reduce backend calls by 70-95% at scale
    # 50ms batching latency is acceptable for most enterprise workloads
  compression:
    enabled: true
    algorithms:
      - gzip
      - brotli
      - zstd
    min_size: 1024

# Authentication & Authorization
auth:
  enabled: true
  providers:
    - type: oidc
      issuer: https://auth.company.com
      client_id: ${OIDC_CLIENT_ID}
      client_secret: ${OIDC_CLIENT_SECRET}
      redirect_uri: https://mcp.company.com/callback
      scopes:
        - openid
        - profile
        - email
        - groups

    - type: saml
      metadata_url: https://identity.company.com/metadata
      entity_id: only1mcp
      assertion_consumer_service: https://mcp.company.com/saml/acs

  rbac:
    enabled: true
    default_role: viewer
    roles:
      - name: admin
        permissions: ["*"]
      - name: developer
        permissions:
          - servers:read
          - servers:execute
          - metrics:read
      - name: viewer
        permissions:
          - servers:read
          - metrics:read

  api_keys:
    enabled: true
    rotation_policy: 90d
    encryption: aes256

  session:
    backend: redis
    ttl: 8h
    refresh_enabled: true
    secure_cookies: true
    same_site: strict

# Observability
observability:
  metrics:
    enabled: true
    provider: prometheus
    endpoint: /metrics
    port: 9090
    labels:
      environment: production
      region: ${AWS_REGION}
      cluster: ${CLUSTER_NAME}

  tracing:
    enabled: true
    provider: opentelemetry
    endpoint: https://otel.company.com:4317
    sample_rate: 0.1
    propagation:
      - w3c
      - jaeger

  logging:
    level: info
    format: json
    outputs:
      - type: file
        path: /var/log/only1mcp/app.log
        rotation:
          max_size: 100MB
          max_age: 30d
          max_backups: 10
      - type: syslog
        endpoint: syslog.company.com:514
        protocol: tcp
        tls: true
      - type: elasticsearch
        url: https://logs.company.com:9200
        index: only1mcp-logs

  audit:
    enabled: true
    backend: database
    retention: 365d
    events:
      - authentication
      - authorization
      - server_access
      - configuration_change
      - admin_actions

# High Availability & Clustering
clustering:
  enabled: true
  mode: active-active
  discovery:
    method: kubernetes
    namespace: mcp-system
    service: only1mcp-headless
  consensus:
    protocol: raft
    election_timeout: 5s
    heartbeat_interval: 1s
  state_sync:
    enabled: true
    interval: 10s

# Security
security:
  tls:
    min_version: "1.3"
    cipher_suites:
      - TLS_AES_256_GCM_SHA384
      - TLS_CHACHA20_POLY1305_SHA256
    client_auth: required

  headers:
    strict_transport_security: "max-age=63072000; includeSubDomains; preload"
    x_frame_options: DENY
    x_content_type_options: nosniff
    x_xss_protection: "1; mode=block"
    content_security_policy: "default-src 'self'"

  cors:
    enabled: false
    allowed_origins: []

  ip_filtering:
    enabled: true
    whitelist:
      - 10.0.0.0/8
      - 172.16.0.0/12
      - 192.168.0.0/16

  secrets:
    backend: vault
    vault_url: https://vault.company.com:8200
    vault_token: ${VAULT_TOKEN}
    mount_path: secret/data/only1mcp

# Performance Tuning
performance:
  worker_threads: 0  # 0 = auto-detect
  max_connections: 50000
  request_timeout: 30s
  keepalive_timeout: 75s
  buffer_size: 64KB
  tcp_nodelay: true
  tcp_keepalive:
    time: 600
    interval: 60
    probes: 9

# Backup & Recovery
backup:
  enabled: true
  schedule: "0 2 * * *"  # 2 AM daily
  retention: 30d
  backends:
    - type: s3
      bucket: company-backups
      prefix: only1mcp/
      region: ${AWS_REGION}
      encryption: true
    - type: local
      path: /backup/only1mcp
      compression: true

# Feature Flags
features:
  hot_reload: true
  auto_discovery: true
  schema_validation: strict
  request_deduplication: true
  response_streaming: true
  websocket_support: true
  grpc_support: false
  graphql_support: false

# Compliance
compliance:
  standards:
    - SOC2
    - ISO27001
    - HIPAA
    - GDPR
  data_residency:
    enabled: true
    regions:
      - us-east-1
      - eu-west-1
  encryption:
    at_rest: true
    in_transit: true
    algorithm: AES-256-GCM
  pii:
    detection: true
    masking: true
    retention: 90d

# TUI Configuration
tui:
  enabled: false  # Use Grafana/Prometheus for enterprise monitoring
  default_tab: overview  # Tab to show on startup (overview/servers/requests/cache/logs)
  refresh_ms: 1000  # Metrics update interval in milliseconds